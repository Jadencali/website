@model  SabongPinoy.Models.ArenaGameViewModel
@{
    ViewBag.Title = "Game Edit";

    @*<script type="text/javascript">
            var idleTime = 0;
            $(document).ready(function () {
                //Increment the idle time counter every minute.
                var idleInterval = setInterval(timerIncrement, 60000); // 1 minute

                //Zero the idle timer on mouse movement.
                $(this).mousemove(function (e) {
                    idleTime = 0;
                });
                $(this).keypress(function (e) {
                    idleTime = 0;
                });
            });

            function timerIncrement() {
                idleTime = idleTime + 1;
                if (idleTime > 3) { // 3 minutes
                    window.location.reload();
                }
            }
        </script>*@
}

<div id="home">
    <div class="container">
        <div id="services">
            <div class="row">
                <div class="col-sm-10 col-sm-offset-1 col-md-10 col-md-offset-1 col-lg-10 col-lg-offset-1 ">
                    <div class="panel panel-primary">
                        <div class="panel-heading text-left">
                            <i class="ion-ios-people"></i> Edit Fight
                            <div class="pull-right">
                                <div class="btn-group open">
                                    <a class=" btn btn-default btn-xs" href="@Url.Action("ArenaGames", "Admin", new { agid = @Request.QueryString["agid"], aid = @Request.QueryString["aid"] })" title="Go Back"><i class="ion ion-arrow-left-b fa-fw"></i></a>
                                </div>
                            </div>
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body">
                            <div class="form-wrapper">
                                <h3 class="text-left text-custom-one">Fight #@Model.ArenaGame.GameNumber Information</h3>
                                <hr />
                                @using (Html.BeginForm("GameEdit", "Admin", new { agid = @Request.QueryString["agid"], aid = @Request.QueryString["aid"] }, FormMethod.Post, new { @class = "form-horizontal text-left" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true)
                                    <div class="error-div small">
                                        <p class="alert-danger"> @Html.ValidationMessage("ErrorMessage")</p>
                                        <p class="alert-danger"> @ViewBag.Message</p>
                                        <br />
                                        <br />
                                    </div>
                                    @Html.HiddenFor(model => model.ArenaGame.ArenaGameId)
                                    @Html.HiddenFor(model => model.ArenaGame.ArenaId)
                                    @Html.HiddenFor(model => model.ArenaGame.GameNumber)
                                    @Html.HiddenFor(model => model.ArenaGame.IsOpenTimestamp)
                                      @Html.HiddenFor(model => model.ArenaGame.ForNextPage)
                                    
                                    <div class="form-group text-dark-mid">
                                        @Html.LabelFor(model => model.ArenaGame.Meron, new { @class = "control-label col-sm-4" })
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(model => model.ArenaGame.Meron, new { @class = "form-control input-sm" })
                                            <span class="text-info small">Ex: Meronname (2kg)</span>
                                            <div class="error-div small">
                                                @Html.ValidationMessageFor(model => model.ArenaGame.Meron)
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group text-dark-mid">
                                        @Html.LabelFor(model => model.ArenaGame.MeronScore, new { @class = "control-label col-sm-4" })
                                        <div class="col-sm-4">
                                            @Html.TextBoxFor(model => model.ArenaGame.MeronScore, new { @class = "form-control input-sm" })
                                            <span class="text-info small">Ex: 1-0-1</span>
                                        </div>
                                    </div>

                                    <div class="form-group text-dark-mid">
                                        @Html.LabelFor(model => model.ArenaGame.MeronArenaNameId, new { @class = "control-label col-sm-4" })
                                        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">
                                            @Html.DropDownListFor(model => model.ArenaGame.MeronArenaNameId, Model.ArenaNameItems, "SELECT MERON OWNER", new { @class = "form-control input-sm" })
                                            <div class="error-div small">
                                                @Html.ValidationMessageFor(model => model.ArenaGame.MeronArenaNameId)
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group text-dark-mid">
                                        @Html.LabelFor(model => model.ArenaGame.Wala, new { @class = "control-label col-sm-4" })
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(model => model.ArenaGame.Wala, new { @class = "form-control input-sm" })
                                            <span class="text-info small">Ex: Walaname (2kg)</span>
                                            <div class="error-div small">
                                                @Html.ValidationMessageFor(model => model.ArenaGame.Wala)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group text-dark-mid">
                                        @Html.LabelFor(model => model.ArenaGame.WalaScore, new { @class = "control-label col-sm-4" })
                                        <div class="col-sm-4">
                                            @Html.TextBoxFor(model => model.ArenaGame.WalaScore, new { @class = "form-control input-sm" })
                                            <span class="text-info small">Ex: 1-0-1</span>
                                        </div>
                                    </div>
                                    <div class="form-group text-dark-mid">
                                        @Html.LabelFor(model => model.ArenaGame.WalaArenaNameId, new { @class = "control-label col-sm-4" })
                                        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">
                                            @Html.DropDownListFor(model => model.ArenaGame.WalaArenaNameId, Model.ArenaNameItems, "SELECT WALA OWNER", new { @class = "form-control input-sm" })
                                            <div class="error-div small">
                                                @Html.ValidationMessageFor(model => model.ArenaGame.WalaArenaNameId)
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group text-dark-mid">
                                        @Html.LabelFor(model => model.ArenaGame.Result, new { @class = "control-label col-sm-4" })
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(model => model.ArenaGame.Result, new { @class = "form-control input-sm" })
                                        </div>
                                    </div>

                                    <div class="form-group text-dark-mid">
                                        @Html.LabelFor(model => model.ArenaGame.IsOpen, new { @class = "control-label col-sm-4" })
                                        <div class="col-sm-8 ">
                                            @Html.CheckBoxFor(model => model.ArenaGame.IsOpen, new { @class = "checkbox pull-left", @readonly = "readonly" })
                                        </div>
                                    </div>

                                    <div class="form-actions no-margin-bottom text-right">
                                        <input type="submit" value="Save" name="SaveGame" class="btn btn-primary" />
                                    </div>
                                }
                            </div>
                        </div>
                        <!-- /.panel-body -->
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

